#!/usr/bin/python3
import concurrent
import urllib.request
import time
import sys

def sum(i):
    result = 0
    for n in range(0, i + 1):
        result = result + n
    return result

class SQLSummitTask:
    def __init__(self, col=None):
        self._executor = None
        self._submit = []
        self._collection = col

    def initialize(self, worker):
        executor = concurrent.futures.ProcessPoolExecutor(max_workers=worker)
        if executor is not None:
            self._executor = executor
        return self
    
    def submit(self, fn, *args):
        self._submit.append(self._executor.submit(fn, args))

t = time.time()

def finish():
    print("woo!")

if __name__ == "__main__":
    ts = 0
    col = [ num for num in range(0, 10000000, 100000) ]
    task = SQLSummitTask(col).initialize(4)
    asp = { task._executor.submit(sum, k): k for k in col }
    for p in concurrent.futures.as_completed(asp):
        data = p.result()
        print(("\rvalue: {ind} :: result: %d" % int(data)).format(ind=asp[p]))
    print('\n')
    result = time.time() - t
    print(str(result) + " sec.")
    finish()

